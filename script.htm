<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
<script>

  //no zeros for heros
function noBoringZeros(n) {
  if(n === 0){
    return n
  }
  let result;
  for(let i = n; i % 1 === 0; i /= 10){
  result = i;
  }
  return result;
}

console.log(noBoringZeros(1450));

// Welcome!
function greet(language) {
  const greeting = {
    english: 'Welcome',
    czech: 'Vitejte',
    danish: 'Velkomst',
    dutch: 'Welkom',
    estonian: 'Tere tulemast',
    finnish: 'Tervetuloa',
    flemish: 'Welgekomen',
    french: 'Bienvenue',
    german: 'Willkommen',
    irish: 'Failte',
    italian: 'Benvenuto',
    latvian: 'Gaidits',
    lithuanian: 'Laukiamas',
    polish: 'Witamy',
    spanish: 'Bienvenido',
    swedish: 'Valkommen',
    welsh: 'Croeso'
  }

  return greeting[language] ? greeting[language] : greeting.english;
}

console.log(greet('irish'))

// Simple multiplication: This kata is about multiplying a given number by eight if it is an even number and by nine otherwise.

function simpleMultiplication(number) {
  return (number % 2 === 0) ? number * 8 : number * 9
}

console.log(simpleMultiplication(3))
console.log(simpleMultiplication(4))

// Capitalization and Mutability

function capitalizeWord(word) {
  word = word[0].toUpperCase() + word.slice(1);
  return word;
}

console.log(capitalizeWord('tomas'))

// Who ate the cookie?
// For this problem you must create a program that says who ate the last cookie. If the input is a string then "Zach" ate the cookie. If the input is a float or an int then "Monica" ate the cookie. If the input is anything else "the dog" ate the cookie. The way to return the statement is: "Who ate the last cookie? It was (name)!"
// Ex: Input = "hi" --> Output = "Who ate the last cookie? It was Zach! (The reason you return Zach is because the input is a string)
// Note: Make sure you return the correct message with correct spaces and punctuation.
// Please leave feedback for this kata. Cheers!

function cookie(x){
  let name;

  switch (typeof x) {
    case 'string':
      name = 'Zach';
    break;
    case 'number':
      name = 'Monica';
    break;
    default:
      name = 'the dog';
    break;
  }

  return 'Who ate the last cookie? It was '+ name + '!'
}

// Who is going to pay for the wall?
// Don Drumphet lives in a nice neighborhood, but one of his neighbors has started to let his house go. Don Drumphet wants to build a wall between his house and his neighbor’s, and is trying to get the neighborhood association to pay for it. He begins to solicit his neighbors to petition to get the association to build the wall. Unfortunately for Don Drumphet, he cannot read very well, has a very limited attention span, and can only remember two letters from each of his neighbors’ names. As he collects signatures, he insists that his neighbors keep truncating their names until two letters remain, and he can finally read them.
// Your code will show Full name of the neighbor and the truncated version of the name as an array. If the number of the characters in name is less than or equal to two, it will return an array containing only the name as is"

function whoIsPaying(name){
  if(name.length <= 2) return [name];

  const truncated = name.slice(0, 2);

  return [name, truncated]
}

// Write a function which calculates the average of the numbers in a given list.
// Note: Empty arrays should return 0.

function findAverage(array) {
  if(array.length === 0) {
    return 0
  }
  const sum = array.reduce((previousValue, item) =>
    previousValue + item);
  return sum / array.length;
}

//Write a function which takes a number and returns the corresponding ASCII char for that value.
function getChar(c){
  return String.fromCharCode(c)
}

// Given a number n, draw stairs using the letter "I", n tall and n wide, with the tallest in the top left.
function drawStairs(n) {
  const stair = `I`;
  let stairs = stair;
  const space = ' ';
  const anotherStair = '\n';

  for(let i = 1; i < n; i++){
    stairs += anotherStair + space.repeat(i) + stair;
  }

  return stairs
}

//Define a function that removes duplicates from an array of non negative numbers and returns it as a result.
//The order of the sequence has to stay the same.

function distinct(a) {
  const result = a.reduce((prevVal, item)=> {
    if (!prevVal.find(d => d === item)){
      prevVal.push(item)
    }
    return prevVal
  }, [])

  return result
}

//The purpose of this kata is to work out just how many bottles of duty free whiskey you would have to buy such that the savings over the normal high street price would effectively cover the cost of your holiday.
//You will be given the high street price (normPrice, in £ (Pounds)), the duty free discount (discount, in percent) and the cost of the holiday (in £).
//For example, if a bottle costs £10 normally and the duty free discount is 10%, you would save £1 per bottle. If your holiday will cost £500, you would have to purchase 500 bottles to save £500, so the answer you return should be 500.
//Another example: if a bottle costs £12 normally and the duty free discount is 50%, you would save £6 per bottle. If your holiday will cost £1000, you would have to purchase 166.66 bottles to save £1000, so your answer should be 166 bottles.
//All inputs will be integers. Please return an integer. Round down.

function dutyFree(normPrice, discount, hol){
  const savings = (normPrice * discount) / 100;
  const items = Math.floor(hol / savings)
  return items
}


</script>
</body>
</html>